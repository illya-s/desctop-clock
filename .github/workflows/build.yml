name: Build Desktop App

on:
  release:
    types: [created]

permissions:
  contents: write

jobs:
  build-linux:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.12

      - name: Install dependencies
        run: |
          pip install pyinstaller fpm

      - name: Build Linux executable
        run: |
          pyinstaller --noconfirm --onefile --windowed \
          --add-data "assets:assets" \
          --icon "assets/icon.png" \
          main.py

      - name: Build .deb package
        run: |
          TAG_VERSION=${GITHUB_REF_NAME#v}
          fpm -s dir -t deb -n "desctop-clock" -v "$TAG_VERSION" \
          dist/main=/usr/bin/desctop-clock \
          assets/=/usr/share/desctop-clock/assets \
          desctop-clock.desktop=/usr/share/applications/desctop-clock.desktop

      - name: Upload Linux .deb to release
        uses: ncipollo/release-action@v1
        with:
          artifacts: dist/*.deb
          tag: ${{ github.ref_name }}

  build-windows:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v3

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.12

      - name: Install dependencies
        run: pip install pyinstaller

      - name: Build Windows executable
        run: |
          pyinstaller --noconfirm --onefile --windowed --add-data "assets;assets" --icon "assets/icon.ico" main.py

      - name: Upload Windows .exe to release
        uses: ncipollo/release-action@v1
        with:
          artifacts: dist/*.exe
          tag: ${{ github.ref_name }}

  build-macos:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v3

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.12

      - name: Install dependencies
        run: pip install pyinstaller

      - name: Build macOS executable
        run: |
          pyinstaller --noconfirm --onefile --windowed \
          --add-data "assets:assets" \
          --icon "assets/icon.icns" \
          main.py

      - name: Create DMG
        run: |
          PROJECT_NAME=$(grep '^name\s*=' pyproject.toml | sed 's/name\s*=\s*"\(.*\)"/\1/')
          hdiutil create -volname "$PROJECT_NAME" -srcfolder dist/ -ov -format UDZO "$PROJECT_NAME.dmg"

      - name: Upload macOS .dmg to release
        uses: ncipollo/release-action@v1
        with:
          artifacts: dist/*.dmg
          tag: ${{ github.ref_name }}
